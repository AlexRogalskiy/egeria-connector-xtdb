Name:         c20-10-crux-b6bbf7c84-4q5p8
Namespace:    default
Priority:     0
Node:         cgk8s-node-2.fyre.ibm.com/9.20.194.190
Start Time:   Fri, 16 Apr 2021 15:15:36 +0100
Labels:       app.kubernetes.io/component=crux-service
              app.kubernetes.io/instance=c20-10
              app.kubernetes.io/name=ec-pts-crux
              pod-template-hash=b6bbf7c84
Annotations:  cni.projectcalico.org/podIP: 10.233.104.252/32
              cni.projectcalico.org/podIPs: 10.233.104.252/32
Status:       Running
IP:           10.233.104.252
IPs:
  IP:           10.233.104.252
Controlled By:  ReplicaSet/c20-10-crux-b6bbf7c84
Init Containers:
  init-connector:
    Container ID:  docker://3587e2ada14e053fece511a02a7a5d839bfbf3470cac180a8f521ed38bc94208
    Image:         docker.io/odpi/egeria-configure:2.8
    Image ID:      docker-pullable://odpi/egeria-configure@sha256:5ab73db31bfc7a62ec8d0d87c05b956cb3e59b15274ec2e37c075394457cd728
    Port:          <none>
    Host Port:     <none>
    Command:
      /bin/bash
      -c
      cd /opt/egeria/connectors && curl --location ${CONNECTOR_URL} --output ${CONNECTOR_JAR} && wget ${CRUX_ROCKS_JAR_URL} && wget ${ROCKS_JAR_URL} && wget ${JNR_JAR_URL}
      
    State:          Terminated
      Reason:       Completed
      Exit Code:    0
      Started:      Fri, 16 Apr 2021 15:15:41 +0100
      Finished:     Fri, 16 Apr 2021 15:15:46 +0100
    Ready:          True
    Restart Count:  0
    Environment Variables from:
      c20-10-configmap  ConfigMap  Optional: false
    Environment:        <none>
    Mounts:
      /opt/egeria/connectors from egeria-crux-connector-volume (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-m8p54 (ro)
Containers:
  proxy:
    Container ID:   docker://fe73aba5790248f282fbdbebd813396e8942f45e858262ffe9cb80ecb68585c4
    Image:          docker.io/odpi/egeria:2.8
    Image ID:       docker-pullable://odpi/egeria@sha256:1652323ac968e53863c8a631a44c3631e4c5a3cffcf535d7a04fd36baff5c907
    Port:           9443/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Fri, 16 Apr 2021 15:15:49 +0100
    Ready:          True
    Restart Count:  0
    Limits:
      cpu:     4
      memory:  16Gi
    Requests:
      cpu:      2
      memory:   8Gi
    Readiness:  tcp-socket :9443 delay=10s timeout=1s period=10s #success=1 #failure=6
    Environment Variables from:
      c20-10-configmap  ConfigMap  Optional: false
    Environment:
      LOADER_PATH:       /opt/egeria/connectors
      MALLOC_ARENA_MAX:  2
    Mounts:
      /opt/egeria/connectors from egeria-crux-connector-volume (ro)
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-m8p54 (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  egeria-crux-connector-volume:
    Type:       EmptyDir (a temporary directory that shares a pod's lifetime)
    Medium:     
    SizeLimit:  <unset>
  default-token-m8p54:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-m8p54
    Optional:    false
QoS Class:       Burstable
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:          <none>

Name:         c20-10-init-and-report-6db595d76c-hdgkt
Namespace:    default
Priority:     0
Node:         cgk8s-node-2.fyre.ibm.com/9.20.194.190
Start Time:   Fri, 16 Apr 2021 15:15:37 +0100
Labels:       app.kubernetes.io/component=init-and-report
              app.kubernetes.io/instance=c20-10
              app.kubernetes.io/name=ec-pts-crux
              pod-template-hash=6db595d76c
Annotations:  cni.projectcalico.org/podIP: 10.233.104.255/32
              cni.projectcalico.org/podIPs: 10.233.104.255/32
Status:       Running
IP:           10.233.104.255
IPs:
  IP:           10.233.104.255
Controlled By:  ReplicaSet/c20-10-init-and-report-6db595d76c
Init Containers:
  wait-for-proxy:
    Container ID:   docker://8703c5f8e367684cfcd7a4edb8c9e2ed9d17a78f1138bd510b945c72dd3e5d98
    Image:          docker.io/odpi/egeria-configure:2.8
    Image ID:       docker-pullable://odpi/egeria-configure@sha256:5ab73db31bfc7a62ec8d0d87c05b956cb3e59b15274ec2e37c075394457cd728
    Port:           <none>
    Host Port:      <none>
    State:          Terminated
      Reason:       Completed
      Exit Code:    0
      Started:      Fri, 16 Apr 2021 15:15:43 +0100
      Finished:     Fri, 16 Apr 2021 15:16:13 +0100
    Ready:          True
    Restart Count:  0
    Environment:
      SERVICE:  c20-10-crux-service
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from c20-10-pts-token-cpp8m (ro)
  wait-for-kafka:
    Container ID:   docker://929c4155222203a797c100ff52dc468d58fa4627d051b6d113ee4bfc2e8feeeb
    Image:          docker.io/odpi/egeria-configure:2.8
    Image ID:       docker-pullable://odpi/egeria-configure@sha256:5ab73db31bfc7a62ec8d0d87c05b956cb3e59b15274ec2e37c075394457cd728
    Port:           <none>
    Host Port:      <none>
    State:          Terminated
      Reason:       Completed
      Exit Code:    0
      Started:      Fri, 16 Apr 2021 15:16:15 +0100
      Finished:     Fri, 16 Apr 2021 15:16:16 +0100
    Ready:          True
    Restart Count:  0
    Environment:
      SERVICE:  c20-10-kafka
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from c20-10-pts-token-cpp8m (ro)
Containers:
  init-and-report:
    Container ID:  docker://ac442fb02ed44a8434ca38fcdc54d9aa61ab643de8ba0a830ba79b64794016c9
    Image:         docker.io/odpi/egeria-configure:2.8
    Image ID:      docker-pullable://odpi/egeria-configure@sha256:5ab73db31bfc7a62ec8d0d87c05b956cb3e59b15274ec2e37c075394457cd728
    Port:          <none>
    Host Port:     <none>
    Command:
      /bin/bash
      -c
      curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/${CRUX_SERVER}/server-url-root?url=${CRUXPROXY_ENDPOINT} && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/pts/server-type?typeName=Conformance && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST --header "Content-Type: application/json" ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/pts/event-bus?topicURLRoot=egeria --data '{"producer": {"bootstrap.servers": "'"${KAFKA_ENDPOINT}"'"}, "consumer": {"bootstrap.servers": "'"${KAFKA_ENDPOINT}"'"} }' && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/pts/cohorts/${EGERIA_COHORT} && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST --header "Content-Type: application/json" ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/pts/conformance-suite-workbenches/repository-workbench/performance --data '{"class":"RepositoryPerformanceWorkbenchConfig","tutRepositoryServerName":"'"${CRUX_SERVER}"'","instancesPerType":20,"maxSearchResults":10,"waitBetweenScenarios":0,"profilesToSkip":["Graph queries","Graph history queries"] }' && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/pts/instance && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/${CRUX_SERVER}/server-type?typeName=Crux && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/${CRUX_SERVER}/organization-name?name=ODPi && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST --header "Content-Type: application/json" ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/${CRUX_SERVER}/event-bus?topicURLRoot=egeria --data '{"producer": {"bootstrap.servers": "'"${KAFKA_ENDPOINT}"'"}, "consumer": {"bootstrap.servers": "'"${KAFKA_ENDPOINT}"'"} }' && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST --header "Content-Type: application/json" ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/${CRUX_SERVER}/local-repository/mode/plugin-repository/connection --data '{"class":"Connection","connectorType":{"class":"ConnectorType","connectorProviderClassName":"org.odpi.egeria.connectors.juxt.crux.repositoryconnector.CruxOMRSRepositoryConnectorProvider"},"configurationProperties":{"cruxConfig":{"crux/index-store":{"kv-store":{"crux/module":"crux.rocksdb/->kv-store","db-dir":"data/servers/crux/rdb-index"}},"crux/document-store":{"kv-store":{"crux/module":"crux.rocksdb/->kv-store","db-dir":"data/servers/crux/rdb-docs"}},"crux/tx-log":{"kv-store":{"crux/module":"crux.rocksdb/->kv-store","db-dir":"data/servers/crux/rdb-tx"}},"egeria.crux.lucene/lucene-store":{"db-dir":"data/servers/crux/lucene"}}}}' && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/${CRUX_SERVER}/cohorts/${EGERIA_COHORT} && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X POST --max-time 900 ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/${CRUX_SERVER}/instance && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X GET ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/pts/configuration > /tmp/omag.server.pts.config && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X GET ${CRUXPROXY_ENDPOINT}/open-metadata/admin-services/users/${EGERIA_USER}/servers/${CRUX_SERVER}/configuration > /tmp/omag.server.${CRUX_SERVER}.config && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X GET ${CRUXPROXY_ENDPOINT}/servers/pts/open-metadata/repository-services/users/${EGERIA_USER}/metadata-highway/local-registration > /tmp/cohort.${EGERIA_COHORT}.pts.local && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X GET ${CRUXPROXY_ENDPOINT}/servers/pts/open-metadata/repository-services/users/${EGERIA_USER}/metadata-highway/cohorts/${EGERIA_COHORT}/remote-members > /tmp/cohort.${EGERIA_COHORT}.pts.remote && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X GET ${CRUXPROXY_ENDPOINT}/servers/${CRUX_SERVER}/open-metadata/repository-services/users/${EGERIA_USER}/metadata-highway/local-registration > /tmp/cohort.${EGERIA_COHORT}.${CRUX_SERVER}.local && curl -f -k -w "\n  (%{http_code} - %{url_effective})\n" --silent -X GET ${CRUXPROXY_ENDPOINT}/servers/${CRUX_SERVER}/open-metadata/repository-services/users/${EGERIA_USER}/metadata-highway/cohorts/${EGERIA_COHORT}/remote-members > /tmp/cohort.${EGERIA_COHORT}.${CRUX_SERVER}.remote && echo ""; echo "Waiting 2 minutes for PTS to start..."; sleep 120 && until [ $(curl -f -k --silent --basic admin:admin -X GET ${CRUXPROXY_ENDPOINT}/servers/pts/open-metadata/conformance-suite/users/${EGERIA_USER}/status/workbenches/performance-workbench | jq '.workbenchStatus.workbenchComplete') == "true" ]; do echo "... waiting for PTS to complete"; sleep 20; done && curl -f -k --silent --basic admin:admin -X GET --max-time 60 ${CRUXPROXY_ENDPOINT}/servers/pts/open-metadata/conformance-suite/users/${EGERIA_USER}/report/summary > /tmp/openmetadata_cts_summary.json && TEST_CASES=$(curl -f -k --silent --basic admin:admin -X GET --max-time 60 ${CRUXPROXY_ENDPOINT}/servers/pts/open-metadata/conformance-suite/users/${EGERIA_USER}/report/test-cases  | jq -r '.testCaseIds[]') && PROFILES=$(curl -f -k --silent --basic admin:admin -X GET --max-time 60 ${CRUXPROXY_ENDPOINT}/servers/pts/open-metadata/conformance-suite/users/${EGERIA_USER}/report/profiles | jq -r '.profileNames[]') && mkdir -p /tmp/profile-details && while read -r line; do urlencoded=$(echo ${line} | sed -e 's/ /%20/g'); filename=$(echo ${line} | sed -e 's/ /_/g'); echo "Retrieving profile details for: ${line}"; curl -f -k --silent --basic admin:admin -X GET --max-time 60 ${CRUXPROXY_ENDPOINT}/servers/pts/open-metadata/conformance-suite/users/${EGERIA_USER}/report/profiles/${urlencoded} > /tmp/profile-details/${filename}.json; done < <(echo "${PROFILES}") && mkdir -p /tmp/test-case-details && while read -r line; do echo "Retrieving test case details for: ${line}"; curl -f -k --silent --basic admin:admin -X GET --max-time 60 ${CRUXPROXY_ENDPOINT}/servers/pts/open-metadata/conformance-suite/users/${EGERIA_USER}/report/test-cases/${line} > /tmp/test-case-details/${line}.json; done < <(echo "${TEST_CASES}") && cd /tmp && tar cvf pd.tar profile-details/*.json; gzip pd.tar && tar cvf tcd.tar test-case-details/*.json; gzip tcd.tar && tar cvf ${PTS_REPORT_NAME}.tar *.config cohort.* openmetadata_cts_summary.json pd.tar.gz tcd.tar.gz; gzip ${PTS_REPORT_NAME}.tar && echo "Complete -- PTS results available to download from /tmp/${PTS_REPORT_NAME}.tar.gz" && tail -f /dev/null
      
    State:          Running
      Started:      Fri, 16 Apr 2021 15:16:17 +0100
    Ready:          True
    Restart Count:  0
    Limits:
      cpu:     500m
      memory:  64Mi
    Requests:
      cpu:     100m
      memory:  16Mi
    Environment Variables from:
      c20-10-configmap  ConfigMap  Optional: false
    Environment:        <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from c20-10-pts-token-cpp8m (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  c20-10-pts-token-cpp8m:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  c20-10-pts-token-cpp8m
    Optional:    false
QoS Class:       Burstable
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:          <none>

Name:         c20-10-kafka-0
Namespace:    default
Priority:     0
Node:         cgk8s-node-2.fyre.ibm.com/9.20.194.190
Start Time:   Fri, 16 Apr 2021 15:15:37 +0100
Labels:       app.kubernetes.io/component=kafka
              app.kubernetes.io/instance=c20-10
              app.kubernetes.io/managed-by=Helm
              app.kubernetes.io/name=kafka
              controller-revision-hash=c20-10-kafka-57bf56784d
              helm.sh/chart=kafka-7.0.4
              statefulset.kubernetes.io/pod-name=c20-10-kafka-0
Annotations:  cni.projectcalico.org/podIP: 10.233.104.254/32
              cni.projectcalico.org/podIPs: 10.233.104.254/32
Status:       Running
IP:           10.233.104.254
IPs:
  IP:           10.233.104.254
Controlled By:  StatefulSet/c20-10-kafka
Containers:
  kafka:
    Container ID:   docker://d6388db9f0e7aad3e730f401312ab8b59be3b55782e89eef2dce85f2b97d881e
    Image:          docker.io/bitnami/kafka:2.3.1-debian-9-r21
    Image ID:       docker-pullable://bitnami/kafka@sha256:c8f86b2bba447bec12dbda8c6ec48bada65f59ca67cd5dba04e41cf5373f2162
    Port:           9092/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Fri, 16 Apr 2021 15:15:39 +0100
    Ready:          True
    Restart Count:  0
    Liveness:       tcp-socket :kafka delay=10s timeout=5s period=10s #success=1 #failure=2
    Readiness:      tcp-socket :kafka delay=5s timeout=5s period=10s #success=1 #failure=6
    Environment:
      BITNAMI_DEBUG:                                       false
      MY_POD_IP:                                            (v1:status.podIP)
      MY_POD_NAME:                                         c20-10-kafka-0 (v1:metadata.name)
      KAFKA_CFG_ZOOKEEPER_CONNECT:                         c20-10-zookeeper
      KAFKA_PORT_NUMBER:                                   9092
      KAFKA_CFG_LISTENERS:                                 PLAINTEXT://:$(KAFKA_PORT_NUMBER)
      KAFKA_CFG_ADVERTISED_LISTENERS:                      PLAINTEXT://$(MY_POD_NAME).c20-10-kafka-headless.default.svc.cluster.local:$(KAFKA_PORT_NUMBER)
      ALLOW_PLAINTEXT_LISTENER:                            yes
      KAFKA_CFG_BROKER_ID:                                 -1
      KAFKA_CFG_DELETE_TOPIC_ENABLE:                       false
      KAFKA_HEAP_OPTS:                                     -Xmx1024m -Xms1024m
      KAFKA_CFG_LOG_FLUSH_INTERVAL_MESSAGES:               10000
      KAFKA_CFG_LOG_FLUSH_INTERVAL_MS:                     1000
      KAFKA_CFG_LOG_RETENTION_BYTES:                       1073741824
      KAFKA_CFG_LOG_RETENTION_CHECK_INTERVALS_MS:          300000
      KAFKA_CFG_LOG_RETENTION_HOURS:                       168
      KAFKA_CFG_MESSAGE_MAX_BYTES:                         1000012
      KAFKA_CFG_LOG_SEGMENT_BYTES:                         1073741824
      KAFKA_CFG_LOG_DIRS:                                  /bitnami/kafka/data
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR:                1
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR:          1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR:  1
      KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM:     https
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR:             1
      KAFKA_CFG_NUM_IO_THREADS:                            8
      KAFKA_CFG_NUM_NETWORK_THREADS:                       3
      KAFKA_CFG_NUM_PARTITIONS:                            1
      KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR:         1
      KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES:               102400
      KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES:                  104857600
      KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES:                  102400
      KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS:           6000
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-m8p54 (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  data:
    Type:       EmptyDir (a temporary directory that shares a pod's lifetime)
    Medium:     
    SizeLimit:  <unset>
  default-token-m8p54:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-m8p54
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:          <none>

Name:         c20-10-zookeeper-0
Namespace:    default
Priority:     0
Node:         cgk8s-node-2.fyre.ibm.com/9.20.194.190
Start Time:   Fri, 16 Apr 2021 15:15:37 +0100
Labels:       app.kubernetes.io/component=zookeeper
              app.kubernetes.io/instance=c20-10
              app.kubernetes.io/name=zookeeper
              controller-revision-hash=c20-10-zookeeper-57d9b5b76b
              helm.sh/chart=zookeeper-5.1.1
              statefulset.kubernetes.io/pod-name=c20-10-zookeeper-0
Annotations:  cni.projectcalico.org/podIP: 10.233.104.253/32
              cni.projectcalico.org/podIPs: 10.233.104.253/32
Status:       Running
IP:           10.233.104.253
IPs:
  IP:           10.233.104.253
Controlled By:  StatefulSet/c20-10-zookeeper
Containers:
  zookeeper:
    Container ID:  docker://fd245ae353d6209fddf5a418029da47a5bcf9da58cc675cfd1bc7f582f1e5171
    Image:         docker.io/bitnami/zookeeper:3.5.6-debian-9-r20
    Image ID:      docker-pullable://bitnami/zookeeper@sha256:0c546cc26e4d3a53a8f4f58e0517e1903c862a60ff03d9b5e9f5beb6acca8683
    Ports:         2181/TCP, 2888/TCP, 3888/TCP
    Host Ports:    0/TCP, 0/TCP, 0/TCP
    Command:
      bash
      -ec
      # Execute entrypoint as usual after obtaining ZOO_SERVER_ID based on POD hostname
      HOSTNAME=`hostname -s`
      if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
        ORD=${BASH_REMATCH[2]}
        export ZOO_SERVER_ID=$((ORD+1))
      else
        echo "Failed to get index from hostname $HOST"
        exit 1
      fi
      exec /entrypoint.sh /run.sh
      
    State:          Running
      Started:      Fri, 16 Apr 2021 15:15:39 +0100
    Ready:          True
    Restart Count:  0
    Requests:
      cpu:      250m
      memory:   256Mi
    Liveness:   tcp-socket :client delay=30s timeout=5s period=10s #success=1 #failure=6
    Readiness:  tcp-socket :client delay=5s timeout=5s period=10s #success=1 #failure=6
    Environment:
      ZOO_PORT_NUMBER:             2181
      ZOO_TICK_TIME:               2000
      ZOO_INIT_LIMIT:              10
      ZOO_SYNC_LIMIT:              5
      ZOO_MAX_CLIENT_CNXNS:        60
      ZOO_4LW_COMMANDS_WHITELIST:  srvr, mntr
      ZOO_SERVERS:                 c20-10-zookeeper-0.c20-10-zookeeper-headless.default.svc.cluster.local:2888:3888
      ZOO_ENABLE_AUTH:             no
      ZOO_HEAP_SIZE:               1024
      ZOO_LOG_LEVEL:               ERROR
      ALLOW_ANONYMOUS_LOGIN:       yes
    Mounts:
      /bitnami/zookeeper from data (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-m8p54 (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  data:
    Type:       EmptyDir (a temporary directory that shares a pod's lifetime)
    Medium:     
    SizeLimit:  <unset>
  default-token-m8p54:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-m8p54
    Optional:    false
QoS Class:       Burstable
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:          <none>

